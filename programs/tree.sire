val D is 3;      % Tree depth
val N is 1 << D; % Number of leaves

server Chan() & (send(val v), recv(var w))
  accept send(val v):
    accept recv(var w):
      w := v;

% Send a token down, then sum values up.
process branch(&Chan c, &Chan left, &Chan right) {
  var u, v:
  c.recv(v);
  assert v = 0;
  left.send(v);
  right.send(v);
  left.recv(u);
  right.recv(v);
  c.send(u + v)
}

% Receive a token and send back a 1.
process leaf(Chan c) {
  var v:
  c.recv(v);
  assert v = 0;
  c.send(1)
}

process main() {

  c is [(2*N)-1] Chan:
  par {
    seq {
      var v:
      c[0].send(0);
      c[0].recv(v);
      assert v = N
    };
    par [i = 0 for N] leaf(c[(N-1) + i]);
    par [i = 0 for N-1] branch(c[i], c[(2*i)+1], c[(2*i)+2])
  }
}
